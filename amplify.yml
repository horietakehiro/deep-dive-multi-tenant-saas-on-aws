applications:
  - appRoot: projects/control-plane
    frontend:
      phases:
        preBuild:
          commands:
            - npm install
        build:
          commands:
            - npm run build
      artifacts:
        baseDirectory: dist
        files:
          - "**/*"
      cache:
        paths:
          - .npm/**/*
          - node_modules/**/*
    backend:
      phases:
        build:
          commands:
            - npm ci --cache .npm --prefer-offline
            # outputsファイルを参照するバックエンドリソースために、空のoutputsファイルを作成しておく
            - 'echo ''{"version": "1.4"}'' > amplify_outputs.json'
            - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID
            # 一度バックエンドのデプロイを完了させてoutputsファイルをエクスポートし、そのoutputsファイルを読み込ませる形で再度バックエンドリソースをデプロイする
            - npx ampx generate outputs --app-id $AWS_APP_ID --branch $AWS_BRANCH
            - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID
  - appRoot: projects/intersection
    # env:
    #   variables:
    #     CONTROL_PLANE_APP_ID: dm601eykhnw0a
    frontend:
      phases:
        preBuild:
          commands:
            # コントロールプレーン側のコードも参照するため、最初にコントロールプレーン側に依存ライブラリをインストールする
            - cd ../control-plane/
            - npm install
            - cd -
            - npm install

        build:
          commands:
            - npm run build
      artifacts:
        baseDirectory: dist
        files:
          - "**/*"
      cache:
        paths:
          - .npm/**/*
          - node_modules/**/*
    backend:
      phases:
        build:
          commands:
            # コントロールプレーン側のコードも参照するため、最初にコントロールプレーン側に依存ライブラリをインストールする
            - cd ../control-plane/
            - npm ci --cache .npm --prefer-offline
            - cd -
            - npm ci --cache .npm --prefer-offline
            # # リソースを共有したい、作成済みのコントロールプレーン側のリソース設定をエクスポートする TODO:
            # - npx ampx generate outputs --branch $AWS_BRANCH --app-id $CONTROL_PLANE_APP_ID --out-dir shared
            # 自分自身のリソースをデプロイする
            - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID
